//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace trofeoCazador.ServicioDelJuego {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorDataContract", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class JugadorDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseniaHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JugadorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContraseniaHash {
            get {
                return this.ContraseniaHashField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseniaHashField, value) != true)) {
                    this.ContraseniaHashField = value;
                    this.RaisePropertyChanged("ContraseniaHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JugadorId {
            get {
                return this.JugadorIdField;
            }
            set {
                if ((this.JugadorIdField.Equals(value) != true)) {
                    this.JugadorIdField = value;
                    this.RaisePropertyChanged("JugadorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorSalaEspera", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class JugadorSalaEspera : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorPartida", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class JugadorPartida : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestionCuentaServicio")]
    public interface IGestionCuentaServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/AgregarJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/AgregarJugadorResponse")]
        bool AgregarJugador(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/AgregarJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/AgregarJugadorResponse")]
        System.Threading.Tasks.Task<bool> AgregarJugadorAsync(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarContraseña", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarContraseñaResponse")]
        bool EditarContraseña(string correo, string nuevaContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarContraseña", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarContraseñaResponse")]
        System.Threading.Tasks.Task<bool> EditarContraseñaAsync(string correo, string nuevaContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesionResponse")]
        trofeoCazador.ServicioDelJuego.JugadorDataContract ValidarInicioSesion(string nombreUsuario, string contraseniaHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesionResponse")]
        System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ValidarInicioSesionAsync(string nombreUsuario, string contraseniaHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerJugadorResponse")]
        trofeoCazador.ServicioDelJuego.JugadorDataContract ObtenerJugador(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerJugadorResponse")]
        System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ObtenerJugadorAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuarioResponse")]
        bool EditarNombreUsuario(int idJugador, string nuevoNombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuarioResponse")]
        System.Threading.Tasks.Task<bool> EditarNombreUsuarioAsync(int idJugador, string nuevoNombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarCorreoResponse")]
        bool EditarCorreo(int idCuenta, string nuevoCorreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarCorreoResponse")]
        System.Threading.Tasks.Task<bool> EditarCorreoAsync(int idCuenta, string nuevoCorreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacionResponse")]
        string EnviarCodigoConfirmacion(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacionResponse")]
        System.Threading.Tasks.Task<string> EnviarCodigoConfirmacionAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarCodigo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarCodigoResponse")]
        bool ValidarCodigo(string codigoIngresado, string codigoEnviado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarCodigo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarCodigoResponse")]
        System.Threading.Tasks.Task<bool> ValidarCodigoAsync(string codigoIngresado, string codigoEnviado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteCorreoResponse")]
        bool ExisteCorreo(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteCorreoResponse")]
        System.Threading.Tasks.Task<bool> ExisteCorreoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuarioResponse")]
        bool ExisteNombreUsuario(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ExisteNombreUsuarioAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/VerificarContrasena", ReplyAction="http://tempuri.org/IGestionCuentaServicio/VerificarContrasenaResponse")]
        bool VerificarContrasena(string contraseniaIngresada, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/VerificarContrasena", ReplyAction="http://tempuri.org/IGestionCuentaServicio/VerificarContrasenaResponse")]
        System.Threading.Tasks.Task<bool> VerificarContrasenaAsync(string contraseniaIngresada, string correo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionCuentaServicioChannel : trofeoCazador.ServicioDelJuego.IGestionCuentaServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionCuentaServicioClient : System.ServiceModel.ClientBase<trofeoCazador.ServicioDelJuego.IGestionCuentaServicio>, trofeoCazador.ServicioDelJuego.IGestionCuentaServicio {
        
        public GestionCuentaServicioClient() {
        }
        
        public GestionCuentaServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionCuentaServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionCuentaServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionCuentaServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AgregarJugador(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador) {
            return base.Channel.AgregarJugador(jugador);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarJugadorAsync(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador) {
            return base.Channel.AgregarJugadorAsync(jugador);
        }
        
        public bool EditarContraseña(string correo, string nuevaContraseña) {
            return base.Channel.EditarContraseña(correo, nuevaContraseña);
        }
        
        public System.Threading.Tasks.Task<bool> EditarContraseñaAsync(string correo, string nuevaContraseña) {
            return base.Channel.EditarContraseñaAsync(correo, nuevaContraseña);
        }
        
        public trofeoCazador.ServicioDelJuego.JugadorDataContract ValidarInicioSesion(string nombreUsuario, string contraseniaHash) {
            return base.Channel.ValidarInicioSesion(nombreUsuario, contraseniaHash);
        }
        
        public System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ValidarInicioSesionAsync(string nombreUsuario, string contraseniaHash) {
            return base.Channel.ValidarInicioSesionAsync(nombreUsuario, contraseniaHash);
        }
        
        public trofeoCazador.ServicioDelJuego.JugadorDataContract ObtenerJugador(int idJugador) {
            return base.Channel.ObtenerJugador(idJugador);
        }
        
        public System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ObtenerJugadorAsync(int idJugador) {
            return base.Channel.ObtenerJugadorAsync(idJugador);
        }
        
        public bool EditarNombreUsuario(int idJugador, string nuevoNombreUsuario) {
            return base.Channel.EditarNombreUsuario(idJugador, nuevoNombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> EditarNombreUsuarioAsync(int idJugador, string nuevoNombreUsuario) {
            return base.Channel.EditarNombreUsuarioAsync(idJugador, nuevoNombreUsuario);
        }
        
        public bool EditarCorreo(int idCuenta, string nuevoCorreo) {
            return base.Channel.EditarCorreo(idCuenta, nuevoCorreo);
        }
        
        public System.Threading.Tasks.Task<bool> EditarCorreoAsync(int idCuenta, string nuevoCorreo) {
            return base.Channel.EditarCorreoAsync(idCuenta, nuevoCorreo);
        }
        
        public string EnviarCodigoConfirmacion(string correo) {
            return base.Channel.EnviarCodigoConfirmacion(correo);
        }
        
        public System.Threading.Tasks.Task<string> EnviarCodigoConfirmacionAsync(string correo) {
            return base.Channel.EnviarCodigoConfirmacionAsync(correo);
        }
        
        public bool ValidarCodigo(string codigoIngresado, string codigoEnviado) {
            return base.Channel.ValidarCodigo(codigoIngresado, codigoEnviado);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCodigoAsync(string codigoIngresado, string codigoEnviado) {
            return base.Channel.ValidarCodigoAsync(codigoIngresado, codigoEnviado);
        }
        
        public bool ExisteCorreo(string correo) {
            return base.Channel.ExisteCorreo(correo);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteCorreoAsync(string correo) {
            return base.Channel.ExisteCorreoAsync(correo);
        }
        
        public bool ExisteNombreUsuario(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuario(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteNombreUsuarioAsync(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuarioAsync(nombreUsuario);
        }
        
        public bool VerificarContrasena(string contraseniaIngresada, string correo) {
            return base.Channel.VerificarContrasena(contraseniaIngresada, correo);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarContrasenaAsync(string contraseniaIngresada, string correo) {
            return base.Channel.VerificarContrasenaAsync(contraseniaIngresada, correo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.ILobbyManager", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.ILobbyManagerCallback))]
    public interface ILobbyManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/InvitarAmigoASala", ReplyAction="http://tempuri.org/ILobbyManager/InvitarAmigoASalaResponse")]
        void InvitarAmigoASala(string codigoSalaEspera, string nombreAmigo, string nombreInvitador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/InvitarAmigoASala", ReplyAction="http://tempuri.org/ILobbyManager/InvitarAmigoASalaResponse")]
        System.Threading.Tasks.Task InvitarAmigoASalaAsync(string codigoSalaEspera, string nombreAmigo, string nombreInvitador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/CrearSalaEspera")]
        void CrearSalaEspera(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/CrearSalaEspera")]
        System.Threading.Tasks.Task CrearSalaEsperaAsync(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/UnirseSalaEspera")]
        void UnirseSalaEspera(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/UnirseSalaEspera")]
        System.Threading.Tasks.Task UnirseSalaEsperaAsync(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/UnirSalaEsperaComoAnfitrion")]
        void UnirSalaEsperaComoAnfitrion(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/UnirSalaEsperaComoAnfitrion")]
        System.Threading.Tasks.Task UnirSalaEsperaComoAnfitrionAsync(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/SalirSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/SalirSalaEsperaResponse")]
        void SalirSalaEspera(string codigoSalaEspera, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/SalirSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/SalirSalaEsperaResponse")]
        System.Threading.Tasks.Task SalirSalaEsperaAsync(string codigoSalaEspera, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/MandarMensaje", ReplyAction="http://tempuri.org/ILobbyManager/MandarMensajeResponse")]
        void MandarMensaje(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/MandarMensaje", ReplyAction="http://tempuri.org/ILobbyManager/MandarMensajeResponse")]
        System.Threading.Tasks.Task MandarMensajeAsync(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/BuscarSalaEsperaDisponible", ReplyAction="http://tempuri.org/ILobbyManager/BuscarSalaEsperaDisponibleResponse")]
        string BuscarSalaEsperaDisponible();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/BuscarSalaEsperaDisponible", ReplyAction="http://tempuri.org/ILobbyManager/BuscarSalaEsperaDisponibleResponse")]
        System.Threading.Tasks.Task<string> BuscarSalaEsperaDisponibleAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/IniciarPartida")]
        void IniciarPartida(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/IniciarPartida")]
        System.Threading.Tasks.Task IniciarPartidaAsync(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ExpulsarJugadorSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/ExpulsarJugadorSalaEsperaResponse")]
        void ExpulsarJugadorSalaEspera(string lobbyCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ExpulsarJugadorSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/ExpulsarJugadorSalaEsperaResponse")]
        System.Threading.Tasks.Task ExpulsarJugadorSalaEsperaAsync(string lobbyCode, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarSalaEsperaCreada", ReplyAction="http://tempuri.org/ILobbyManager/NotificarSalaEsperaCreadaResponse")]
        void NotificarSalaEsperaCreada(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarJugadoresEnSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/NotificarJugadoresEnSalaEsperaResponse")]
        void NotificarJugadoresEnSalaEspera(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera[] jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarJugadorSeUnioSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/NotificarJugadorSeUnioSalaEsperaResponse")]
        void NotificarJugadorSeUnioSalaEspera(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador, int numeroJugadoresSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarJugadorSalioSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/NotificarJugadorSalioSalaEsperaResponse")]
        void NotificarJugadorSalioSalaEspera(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarAnfritionJugadorSalioSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/NotificarAnfritionJugadorSalioSalaEsperaResponse" +
            "")]
        void NotificarAnfritionJugadorSalioSalaEspera();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarIniciarPartida", ReplyAction="http://tempuri.org/ILobbyManager/NotificarIniciarPartidaResponse")]
        void NotificarIniciarPartida(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadoresPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarSalaEsperaLlena", ReplyAction="http://tempuri.org/ILobbyManager/NotificarSalaEsperaLlenaResponse")]
        void NotificarSalaEsperaLlena();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarSalaEsperaNoExiste", ReplyAction="http://tempuri.org/ILobbyManager/NotificarSalaEsperaNoExisteResponse")]
        void NotificarSalaEsperaNoExiste();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarExpulsadoSalaEspera", ReplyAction="http://tempuri.org/ILobbyManager/NotificarExpulsadoSalaEsperaResponse")]
        void NotificarExpulsadoSalaEspera();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/RecibirMensaje", ReplyAction="http://tempuri.org/ILobbyManager/RecibirMensajeResponse")]
        void RecibirMensaje(string nombreUsuario, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/NotificarPuedeIniciarPartida", ReplyAction="http://tempuri.org/ILobbyManager/NotificarPuedeIniciarPartidaResponse")]
        void NotificarPuedeIniciarPartida(bool puedeIniciar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerChannel : trofeoCazador.ServicioDelJuego.ILobbyManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyManagerClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.ILobbyManager>, trofeoCazador.ServicioDelJuego.ILobbyManager {
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void InvitarAmigoASala(string codigoSalaEspera, string nombreAmigo, string nombreInvitador) {
            base.Channel.InvitarAmigoASala(codigoSalaEspera, nombreAmigo, nombreInvitador);
        }
        
        public System.Threading.Tasks.Task InvitarAmigoASalaAsync(string codigoSalaEspera, string nombreAmigo, string nombreInvitador) {
            return base.Channel.InvitarAmigoASalaAsync(codigoSalaEspera, nombreAmigo, nombreInvitador);
        }
        
        public void CrearSalaEspera(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            base.Channel.CrearSalaEspera(jugador);
        }
        
        public System.Threading.Tasks.Task CrearSalaEsperaAsync(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            return base.Channel.CrearSalaEsperaAsync(jugador);
        }
        
        public void UnirseSalaEspera(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            base.Channel.UnirseSalaEspera(codigoSalaEspera, jugador);
        }
        
        public System.Threading.Tasks.Task UnirseSalaEsperaAsync(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            return base.Channel.UnirseSalaEsperaAsync(codigoSalaEspera, jugador);
        }
        
        public void UnirSalaEsperaComoAnfitrion(string codigoSalaEspera) {
            base.Channel.UnirSalaEsperaComoAnfitrion(codigoSalaEspera);
        }
        
        public System.Threading.Tasks.Task UnirSalaEsperaComoAnfitrionAsync(string codigoSalaEspera) {
            return base.Channel.UnirSalaEsperaComoAnfitrionAsync(codigoSalaEspera);
        }
        
        public void SalirSalaEspera(string codigoSalaEspera, string nombreUsuario) {
            base.Channel.SalirSalaEspera(codigoSalaEspera, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task SalirSalaEsperaAsync(string codigoSalaEspera, string nombreUsuario) {
            return base.Channel.SalirSalaEsperaAsync(codigoSalaEspera, nombreUsuario);
        }
        
        public void MandarMensaje(string mensaje) {
            base.Channel.MandarMensaje(mensaje);
        }
        
        public System.Threading.Tasks.Task MandarMensajeAsync(string mensaje) {
            return base.Channel.MandarMensajeAsync(mensaje);
        }
        
        public string BuscarSalaEsperaDisponible() {
            return base.Channel.BuscarSalaEsperaDisponible();
        }
        
        public System.Threading.Tasks.Task<string> BuscarSalaEsperaDisponibleAsync() {
            return base.Channel.BuscarSalaEsperaDisponibleAsync();
        }
        
        public void IniciarPartida(string codigoSalaEspera) {
            base.Channel.IniciarPartida(codigoSalaEspera);
        }
        
        public System.Threading.Tasks.Task IniciarPartidaAsync(string codigoSalaEspera) {
            return base.Channel.IniciarPartidaAsync(codigoSalaEspera);
        }
        
        public void ExpulsarJugadorSalaEspera(string lobbyCode, string username) {
            base.Channel.ExpulsarJugadorSalaEspera(lobbyCode, username);
        }
        
        public System.Threading.Tasks.Task ExpulsarJugadorSalaEsperaAsync(string lobbyCode, string username) {
            return base.Channel.ExpulsarJugadorSalaEsperaAsync(lobbyCode, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorAmistad")]
    public interface IGestorAmistad {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigos", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigosResponse")]
        string[] ObtenerListaNombresUsuariosAmigos(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigos", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigosResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerListaNombresUsuariosAmigosAsync(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistadResponse")]
        bool ValidarEnvioSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistadResponse")]
        System.Threading.Tasks.Task<bool> ValidarEnvioSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistadResponse")]
        int AgregarSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistadResponse")]
        System.Threading.Tasks.Task<int> AgregarSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantes", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantesResponse")]
        string[] ObtenerNombresUsuariosSolicitantes(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantes", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantesResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerNombresUsuariosSolicitantesAsync(int idPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorAmistadChannel : trofeoCazador.ServicioDelJuego.IGestorAmistad, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorAmistadClient : System.ServiceModel.ClientBase<trofeoCazador.ServicioDelJuego.IGestorAmistad>, trofeoCazador.ServicioDelJuego.IGestorAmistad {
        
        public GestorAmistadClient() {
        }
        
        public GestorAmistadClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestorAmistadClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorAmistadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorAmistadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] ObtenerListaNombresUsuariosAmigos(int idPlayer) {
            return base.Channel.ObtenerListaNombresUsuariosAmigos(idPlayer);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerListaNombresUsuariosAmigosAsync(int idPlayer) {
            return base.Channel.ObtenerListaNombresUsuariosAmigosAsync(idPlayer);
        }
        
        public bool ValidarEnvioSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.ValidarEnvioSolicitudAmistad(idPlayerSender, usernamePlayerRequested);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarEnvioSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.ValidarEnvioSolicitudAmistadAsync(idPlayerSender, usernamePlayerRequested);
        }
        
        public int AgregarSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.AgregarSolicitudAmistad(idPlayerSender, usernamePlayerRequested);
        }
        
        public System.Threading.Tasks.Task<int> AgregarSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.AgregarSolicitudAmistadAsync(idPlayerSender, usernamePlayerRequested);
        }
        
        public string[] ObtenerNombresUsuariosSolicitantes(int idPlayer) {
            return base.Channel.ObtenerNombresUsuariosSolicitantes(idPlayer);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerNombresUsuariosSolicitantesAsync(int idPlayer) {
            return base.Channel.ObtenerNombresUsuariosSolicitantesAsync(idPlayer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorDeSolicitudesDeAmistad", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistadCallback))]
    public interface IGestorDeSolicitudesDeAmistad {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AgregarADiccionarioAmistadesEnLi" +
            "nea")]
        void AgregarADiccionarioAmistadesEnLinea(string nombreUsuarioDeActualJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AgregarADiccionarioAmistadesEnLi" +
            "nea")]
        System.Threading.Tasks.Task AgregarADiccionarioAmistadesEnLineaAsync(string nombreUsuarioDeActualJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EnviarSolicitudAmistad")]
        void EnviarSolicitudAmistad(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EnviarSolicitudAmistad")]
        System.Threading.Tasks.Task EnviarSolicitudAmistadAsync(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AceptarSolicitudAmistad")]
        void AceptarSolicitudAmistad(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AceptarSolicitudAmistad")]
        System.Threading.Tasks.Task AceptarSolicitudAmistadAsync(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/RechazarSolicitudAmistad")]
        void RechazarSolicitudAmistad(int idJugadorActual, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/RechazarSolicitudAmistad")]
        System.Threading.Tasks.Task RechazarSolicitudAmistadAsync(int idJugadorActual, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarAmigo")]
        void EliminarAmigo(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarAmigo")]
        System.Threading.Tasks.Task EliminarAmigoAsync(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarDeDiccionarioAmistadesEn" +
            "Linea")]
        void EliminarDeDiccionarioAmistadesEnLinea(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarDeDiccionarioAmistadesEn" +
            "Linea")]
        System.Threading.Tasks.Task EliminarDeDiccionarioAmistadesEnLineaAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorDeSolicitudesDeAmistadCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarNuevaSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarNuevaSolicitudAmistadRe" +
            "sponse")]
        void NotificarNuevaSolicitudAmistad(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarSolicitudAmistadAceptad" +
            "a", ReplyAction="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarSolicitudAmistadAceptad" +
            "aResponse")]
        void NotificarSolicitudAmistadAceptada(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarAmigoEliminado", ReplyAction="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarAmigoEliminadoResponse")]
        void NotificarAmigoEliminado(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorDeSolicitudesDeAmistadChannel : trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistad, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorDeSolicitudesDeAmistadClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistad>, trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistad {
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AgregarADiccionarioAmistadesEnLinea(string nombreUsuarioDeActualJugador) {
            base.Channel.AgregarADiccionarioAmistadesEnLinea(nombreUsuarioDeActualJugador);
        }
        
        public System.Threading.Tasks.Task AgregarADiccionarioAmistadesEnLineaAsync(string nombreUsuarioDeActualJugador) {
            return base.Channel.AgregarADiccionarioAmistadesEnLineaAsync(nombreUsuarioDeActualJugador);
        }
        
        public void EnviarSolicitudAmistad(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado) {
            base.Channel.EnviarSolicitudAmistad(nombreUsuarioJugadorRemitente, nombreUsuarioJugadorSolicitado);
        }
        
        public System.Threading.Tasks.Task EnviarSolicitudAmistadAsync(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado) {
            return base.Channel.EnviarSolicitudAmistadAsync(nombreUsuarioJugadorRemitente, nombreUsuarioJugadorSolicitado);
        }
        
        public void AceptarSolicitudAmistad(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente) {
            base.Channel.AceptarSolicitudAmistad(idJugadorSolicitado, nombreUsuarioJugadorSolicitado, nombreUsuarioJugadorRemitente);
        }
        
        public System.Threading.Tasks.Task AceptarSolicitudAmistadAsync(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente) {
            return base.Channel.AceptarSolicitudAmistadAsync(idJugadorSolicitado, nombreUsuarioJugadorSolicitado, nombreUsuarioJugadorRemitente);
        }
        
        public void RechazarSolicitudAmistad(int idJugadorActual, string nombreUsuario) {
            base.Channel.RechazarSolicitudAmistad(idJugadorActual, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task RechazarSolicitudAmistadAsync(int idJugadorActual, string nombreUsuario) {
            return base.Channel.RechazarSolicitudAmistadAsync(idJugadorActual, nombreUsuario);
        }
        
        public void EliminarAmigo(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado) {
            base.Channel.EliminarAmigo(idJugadorActual, nombreUsuarioDeActualJugador, nombreUsuarioAmigoEliminado);
        }
        
        public System.Threading.Tasks.Task EliminarAmigoAsync(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado) {
            return base.Channel.EliminarAmigoAsync(idJugadorActual, nombreUsuarioDeActualJugador, nombreUsuarioAmigoEliminado);
        }
        
        public void EliminarDeDiccionarioAmistadesEnLinea(string nombreUsuario) {
            base.Channel.EliminarDeDiccionarioAmistadesEnLinea(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task EliminarDeDiccionarioAmistadesEnLineaAsync(string nombreUsuario) {
            return base.Channel.EliminarDeDiccionarioAmistadesEnLineaAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorUsuariosConectados", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.IGestorUsuariosConectadosCallback))]
    public interface IGestorUsuariosConectados {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/RegistrarUsuarioAUsuariosConectados")]
        void RegistrarUsuarioAUsuariosConectados(int idJugador, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/RegistrarUsuarioAUsuariosConectados")]
        System.Threading.Tasks.Task RegistrarUsuarioAUsuariosConectadosAsync(int idJugador, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/DesregistrarUsuarioDeUsuariosEnLinea" +
            "")]
        void DesregistrarUsuarioDeUsuariosEnLinea(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/DesregistrarUsuarioDeUsuariosEnLinea" +
            "")]
        System.Threading.Tasks.Task DesregistrarUsuarioDeUsuariosEnLineaAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorUsuariosConectadosCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/NotificarInvitacionSala")]
        void NotificarInvitacionSala(string nombreInvitador, string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioConectado", ReplyAction="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioConectadoResponse")]
        void NotificarUsuarioConectado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioDesconectado", ReplyAction="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioDesconectadoResponse" +
            "")]
        void NotificarUsuarioDesconectado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorUsuariosConectados/NotificarAmigosEnLinea", ReplyAction="http://tempuri.org/IGestorUsuariosConectados/NotificarAmigosEnLineaResponse")]
        void NotificarAmigosEnLinea(string[] nombresUsuariosEnLinea);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/Ping")]
        void Ping();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorUsuariosConectadosChannel : trofeoCazador.ServicioDelJuego.IGestorUsuariosConectados, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorUsuariosConectadosClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.IGestorUsuariosConectados>, trofeoCazador.ServicioDelJuego.IGestorUsuariosConectados {
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegistrarUsuarioAUsuariosConectados(int idJugador, string nombreUsuario) {
            base.Channel.RegistrarUsuarioAUsuariosConectados(idJugador, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task RegistrarUsuarioAUsuariosConectadosAsync(int idJugador, string nombreUsuario) {
            return base.Channel.RegistrarUsuarioAUsuariosConectadosAsync(idJugador, nombreUsuario);
        }
        
        public void DesregistrarUsuarioDeUsuariosEnLinea(string nombreUsuario) {
            base.Channel.DesregistrarUsuarioDeUsuariosEnLinea(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task DesregistrarUsuarioDeUsuariosEnLineaAsync(string nombreUsuario) {
            return base.Channel.DesregistrarUsuarioDeUsuariosEnLineaAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IServicioPartida", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.IServicioPartidaCallback))]
    public interface IServicioPartida {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EmpezarTurno")]
        void EmpezarTurno(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EmpezarTurno")]
        System.Threading.Tasks.Task EmpezarTurnoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/FinalizarTurno")]
        void FinalizarTurno(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/FinalizarTurno")]
        System.Threading.Tasks.Task FinalizarTurnoAsync(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/CrearPartida")]
        void CrearPartida(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/CrearPartida")]
        System.Threading.Tasks.Task CrearPartidaAsync(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RegistrarJugador")]
        void RegistrarJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RegistrarJugador")]
        System.Threading.Tasks.Task RegistrarJugadorAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/LanzarDado")]
        void LanzarDado(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/LanzarDado")]
        System.Threading.Tasks.Task LanzarDadoAsync(string idPartida, string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioPartidaCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarTurnoIniciado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarTurnoIniciadoResponse")]
        void NotificarTurnoIniciado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarTurnoTerminado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarTurnoTerminadoResponse")]
        void NotificarTurnoTerminado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarResultadoAccion", ReplyAction="http://tempuri.org/IServicioPartida/NotificarResultadoAccionResponse")]
        void NotificarResultadoAccion(string accion, bool sucedio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarPartidaCreada", ReplyAction="http://tempuri.org/IServicioPartida/NotificarPartidaCreadaResponse")]
        void NotificarPartidaCreada(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarResultadoDado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarResultadoDadoResponse")]
        void NotificarResultadoDado(string nombreUsuario, int resultado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioPartidaChannel : trofeoCazador.ServicioDelJuego.IServicioPartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioPartidaClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.IServicioPartida>, trofeoCazador.ServicioDelJuego.IServicioPartida {
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void EmpezarTurno(string idPartida) {
            base.Channel.EmpezarTurno(idPartida);
        }
        
        public System.Threading.Tasks.Task EmpezarTurnoAsync(string idPartida) {
            return base.Channel.EmpezarTurnoAsync(idPartida);
        }
        
        public void FinalizarTurno(string idPartida, string nombreUsuario) {
            base.Channel.FinalizarTurno(idPartida, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task FinalizarTurnoAsync(string idPartida, string nombreUsuario) {
            return base.Channel.FinalizarTurnoAsync(idPartida, nombreUsuario);
        }
        
        public void CrearPartida(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida) {
            base.Channel.CrearPartida(jugadores, idPartida);
        }
        
        public System.Threading.Tasks.Task CrearPartidaAsync(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida) {
            return base.Channel.CrearPartidaAsync(jugadores, idPartida);
        }
        
        public void RegistrarJugador(string nombreUsuario) {
            base.Channel.RegistrarJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task RegistrarJugadorAsync(string nombreUsuario) {
            return base.Channel.RegistrarJugadorAsync(nombreUsuario);
        }
        
        public void LanzarDado(string idPartida, string nombreUsuario) {
            base.Channel.LanzarDado(idPartida, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task LanzarDadoAsync(string idPartida, string nombreUsuario) {
            return base.Channel.LanzarDadoAsync(idPartida, nombreUsuario);
        }
    }
}
