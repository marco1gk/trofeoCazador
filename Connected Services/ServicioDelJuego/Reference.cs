//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace trofeoCazador.ServicioDelJuego {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorDataContract", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class JugadorDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseniaHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EsInvitadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JugadorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContraseniaHash {
            get {
                return this.ContraseniaHashField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseniaHashField, value) != true)) {
                    this.ContraseniaHashField = value;
                    this.RaisePropertyChanged("ContraseniaHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsInvitado {
            get {
                return this.EsInvitadoField;
            }
            set {
                if ((this.EsInvitadoField.Equals(value) != true)) {
                    this.EsInvitadoField = value;
                    this.RaisePropertyChanged("EsInvitado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JugadorId {
            get {
                return this.JugadorIdField;
            }
            set {
                if ((this.JugadorIdField.Equals(value) != true)) {
                    this.JugadorIdField = value;
                    this.RaisePropertyChanged("JugadorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
    [System.SerializableAttribute()]
    public partial class HuntersTrophyExcepcion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensaje {
            get {
                return this.MensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeField, value) != true)) {
                    this.MensajeField = value;
                    this.RaisePropertyChanged("Mensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorSalaEspera", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class JugadorSalaEspera : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EsInvitadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsInvitado {
            get {
                return this.EsInvitadoField;
            }
            set {
                if ((this.EsInvitadoField.Equals(value) != true)) {
                    this.EsInvitadoField = value;
                    this.RaisePropertyChanged("EsInvitado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorPartida", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class JugadorPartida : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EsInvitadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EsInvitado {
            get {
                return this.EsInvitadoField;
            }
            set {
                if ((this.EsInvitadoField.Equals(value) != true)) {
                    this.EsInvitadoField = value;
                    this.RaisePropertyChanged("EsInvitado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carta", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego")]
    [System.SerializableAttribute()]
    public partial class Carta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCartaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRutaImagenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PosicionXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PosicionYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCarta {
            get {
                return this.IdCartaField;
            }
            set {
                if ((this.IdCartaField.Equals(value) != true)) {
                    this.IdCartaField = value;
                    this.RaisePropertyChanged("IdCarta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRutaImagen {
            get {
                return this.IdRutaImagenField;
            }
            set {
                if ((this.IdRutaImagenField.Equals(value) != true)) {
                    this.IdRutaImagenField = value;
                    this.RaisePropertyChanged("IdRutaImagen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PosicionX {
            get {
                return this.PosicionXField;
            }
            set {
                if ((this.PosicionXField.Equals(value) != true)) {
                    this.PosicionXField = value;
                    this.RaisePropertyChanged("PosicionX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PosicionY {
            get {
                return this.PosicionYField;
            }
            set {
                if ((this.PosicionYField.Equals(value) != true)) {
                    this.PosicionYField = value;
                    this.RaisePropertyChanged("PosicionY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo {
            get {
                return this.TipoField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoField, value) != true)) {
                    this.TipoField = value;
                    this.RaisePropertyChanged("Tipo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Estadisticas", Namespace="http://schemas.datacontract.org/2004/07/AccesoDatos.Modelo")]
    [System.SerializableAttribute()]
    public partial class Estadisticas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdEstadisticasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private trofeoCazador.ServicioDelJuego.Jugador JugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroVictoriasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEstadisticas {
            get {
                return this.IdEstadisticasField;
            }
            set {
                if ((this.IdEstadisticasField.Equals(value) != true)) {
                    this.IdEstadisticasField = value;
                    this.RaisePropertyChanged("IdEstadisticas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJugador {
            get {
                return this.IdJugadorField;
            }
            set {
                if ((this.IdJugadorField.Equals(value) != true)) {
                    this.IdJugadorField = value;
                    this.RaisePropertyChanged("IdJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public trofeoCazador.ServicioDelJuego.Jugador Jugador {
            get {
                return this.JugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.JugadorField, value) != true)) {
                    this.JugadorField = value;
                    this.RaisePropertyChanged("Jugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroVictorias {
            get {
                return this.NumeroVictoriasField;
            }
            set {
                if ((this.NumeroVictoriasField.Equals(value) != true)) {
                    this.NumeroVictoriasField = value;
                    this.RaisePropertyChanged("NumeroVictorias");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/AccesoDatos.Modelo")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private trofeoCazador.ServicioDelJuego.Cuenta CuentaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JugadorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumeroFotoPerfilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public trofeoCazador.ServicioDelJuego.Cuenta Cuenta {
            get {
                return this.CuentaField;
            }
            set {
                if ((object.ReferenceEquals(this.CuentaField, value) != true)) {
                    this.CuentaField = value;
                    this.RaisePropertyChanged("Cuenta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JugadorId {
            get {
                return this.JugadorIdField;
            }
            set {
                if ((this.JugadorIdField.Equals(value) != true)) {
                    this.JugadorIdField = value;
                    this.RaisePropertyChanged("JugadorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumeroFotoPerfil {
            get {
                return this.NumeroFotoPerfilField;
            }
            set {
                if ((this.NumeroFotoPerfilField.Equals(value) != true)) {
                    this.NumeroFotoPerfilField = value;
                    this.RaisePropertyChanged("NumeroFotoPerfil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cuenta", Namespace="http://schemas.datacontract.org/2004/07/AccesoDatos.Modelo")]
    [System.SerializableAttribute()]
    public partial class Cuenta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseniaHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private trofeoCazador.ServicioDelJuego.Jugador JugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JugadorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContraseniaHash {
            get {
                return this.ContraseniaHashField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseniaHashField, value) != true)) {
                    this.ContraseniaHashField = value;
                    this.RaisePropertyChanged("ContraseniaHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public trofeoCazador.ServicioDelJuego.Jugador Jugador {
            get {
                return this.JugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.JugadorField, value) != true)) {
                    this.JugadorField = value;
                    this.RaisePropertyChanged("Jugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JugadorId {
            get {
                return this.JugadorIdField;
            }
            set {
                if ((this.JugadorIdField.Equals(value) != true)) {
                    this.JugadorIdField = value;
                    this.RaisePropertyChanged("JugadorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestionCuentaServicio")]
    public interface IGestionCuentaServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/AgregarJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/AgregarJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestionCuentaServicio/AgregarJugadorHuntersTrophyExcepcionFau" +
            "lt", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        bool AgregarJugador(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/AgregarJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/AgregarJugadorResponse")]
        System.Threading.Tasks.Task<bool> AgregarJugadorAsync(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerNombreUsuarioPorIdJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerNombreUsuarioPorIdJugadorRespons" +
            "e")]
        string ObtenerNombreUsuarioPorIdJugador(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerNombreUsuarioPorIdJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerNombreUsuarioPorIdJugadorRespons" +
            "e")]
        System.Threading.Tasks.Task<string> ObtenerNombreUsuarioPorIdJugadorAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarContraseña", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarContraseñaResponse")]
        bool EditarContraseña(string correo, string nuevaContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarContraseña", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarContraseñaResponse")]
        System.Threading.Tasks.Task<bool> EditarContraseñaAsync(string correo, string nuevaContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesionHuntersTrophyExcepci" +
            "onFault", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        trofeoCazador.ServicioDelJuego.JugadorDataContract ValidarInicioSesion(string nombreUsuario, string contraseniaHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarInicioSesionResponse")]
        System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ValidarInicioSesionAsync(string nombreUsuario, string contraseniaHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerJugadorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestionCuentaServicio/ObtenerJugadorHuntersTrophyExcepcionFau" +
            "lt", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        trofeoCazador.ServicioDelJuego.JugadorDataContract ObtenerJugador(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerJugador", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerJugadorResponse")]
        System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ObtenerJugadorAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuarioResponse")]
        bool EditarNombreUsuario(int idJugador, string nuevoNombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarNombreUsuarioResponse")]
        System.Threading.Tasks.Task<bool> EditarNombreUsuarioAsync(int idJugador, string nuevoNombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarCorreoResponse")]
        bool EditarCorreo(int idCuenta, string nuevoCorreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EditarCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EditarCorreoResponse")]
        System.Threading.Tasks.Task<bool> EditarCorreoAsync(int idCuenta, string nuevoCorreo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacionResponse")]
        string EnviarCodigoConfirmacion(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacion", ReplyAction="http://tempuri.org/IGestionCuentaServicio/EnviarCodigoConfirmacionResponse")]
        System.Threading.Tasks.Task<string> EnviarCodigoConfirmacionAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarCodigo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarCodigoResponse")]
        bool ValidarCodigo(string codigoIngresado, string codigoEnviado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarCodigo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarCodigoResponse")]
        System.Threading.Tasks.Task<bool> ValidarCodigoAsync(string codigoIngresado, string codigoEnviado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteCorreoResponse")]
        bool ExisteCorreo(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteCorreo", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteCorreoResponse")]
        System.Threading.Tasks.Task<bool> ExisteCorreoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuarioResponse")]
        bool ExisteNombreUsuario(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ExisteNombreUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ExisteNombreUsuarioAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/VerificarContrasena", ReplyAction="http://tempuri.org/IGestionCuentaServicio/VerificarContrasenaResponse")]
        bool VerificarContrasena(string contraseniaIngresada, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/VerificarContrasena", ReplyAction="http://tempuri.org/IGestionCuentaServicio/VerificarContrasenaResponse")]
        System.Threading.Tasks.Task<bool> VerificarContrasenaAsync(string contraseniaIngresada, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarUsuarioEnLinea", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarUsuarioEnLineaResponse")]
        bool ValidarUsuarioEnLinea(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ValidarUsuarioEnLinea", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ValidarUsuarioEnLineaResponse")]
        System.Threading.Tasks.Task<bool> ValidarUsuarioEnLineaAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerIdJugadorPorNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerIdJugadorPorNombreUsuarioRespons" +
            "e")]
        int ObtenerIdJugadorPorNombreUsuario(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCuentaServicio/ObtenerIdJugadorPorNombreUsuario", ReplyAction="http://tempuri.org/IGestionCuentaServicio/ObtenerIdJugadorPorNombreUsuarioRespons" +
            "e")]
        System.Threading.Tasks.Task<int> ObtenerIdJugadorPorNombreUsuarioAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionCuentaServicioChannel : trofeoCazador.ServicioDelJuego.IGestionCuentaServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionCuentaServicioClient : System.ServiceModel.ClientBase<trofeoCazador.ServicioDelJuego.IGestionCuentaServicio>, trofeoCazador.ServicioDelJuego.IGestionCuentaServicio {
        
        public GestionCuentaServicioClient() {
        }
        
        public GestionCuentaServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionCuentaServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionCuentaServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionCuentaServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AgregarJugador(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador) {
            return base.Channel.AgregarJugador(jugador);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarJugadorAsync(trofeoCazador.ServicioDelJuego.JugadorDataContract jugador) {
            return base.Channel.AgregarJugadorAsync(jugador);
        }
        
        public string ObtenerNombreUsuarioPorIdJugador(int idJugador) {
            return base.Channel.ObtenerNombreUsuarioPorIdJugador(idJugador);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerNombreUsuarioPorIdJugadorAsync(int idJugador) {
            return base.Channel.ObtenerNombreUsuarioPorIdJugadorAsync(idJugador);
        }
        
        public bool EditarContraseña(string correo, string nuevaContraseña) {
            return base.Channel.EditarContraseña(correo, nuevaContraseña);
        }
        
        public System.Threading.Tasks.Task<bool> EditarContraseñaAsync(string correo, string nuevaContraseña) {
            return base.Channel.EditarContraseñaAsync(correo, nuevaContraseña);
        }
        
        public trofeoCazador.ServicioDelJuego.JugadorDataContract ValidarInicioSesion(string nombreUsuario, string contraseniaHash) {
            return base.Channel.ValidarInicioSesion(nombreUsuario, contraseniaHash);
        }
        
        public System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ValidarInicioSesionAsync(string nombreUsuario, string contraseniaHash) {
            return base.Channel.ValidarInicioSesionAsync(nombreUsuario, contraseniaHash);
        }
        
        public trofeoCazador.ServicioDelJuego.JugadorDataContract ObtenerJugador(int idJugador) {
            return base.Channel.ObtenerJugador(idJugador);
        }
        
        public System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.JugadorDataContract> ObtenerJugadorAsync(int idJugador) {
            return base.Channel.ObtenerJugadorAsync(idJugador);
        }
        
        public bool EditarNombreUsuario(int idJugador, string nuevoNombreUsuario) {
            return base.Channel.EditarNombreUsuario(idJugador, nuevoNombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> EditarNombreUsuarioAsync(int idJugador, string nuevoNombreUsuario) {
            return base.Channel.EditarNombreUsuarioAsync(idJugador, nuevoNombreUsuario);
        }
        
        public bool EditarCorreo(int idCuenta, string nuevoCorreo) {
            return base.Channel.EditarCorreo(idCuenta, nuevoCorreo);
        }
        
        public System.Threading.Tasks.Task<bool> EditarCorreoAsync(int idCuenta, string nuevoCorreo) {
            return base.Channel.EditarCorreoAsync(idCuenta, nuevoCorreo);
        }
        
        public string EnviarCodigoConfirmacion(string correo) {
            return base.Channel.EnviarCodigoConfirmacion(correo);
        }
        
        public System.Threading.Tasks.Task<string> EnviarCodigoConfirmacionAsync(string correo) {
            return base.Channel.EnviarCodigoConfirmacionAsync(correo);
        }
        
        public bool ValidarCodigo(string codigoIngresado, string codigoEnviado) {
            return base.Channel.ValidarCodigo(codigoIngresado, codigoEnviado);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCodigoAsync(string codigoIngresado, string codigoEnviado) {
            return base.Channel.ValidarCodigoAsync(codigoIngresado, codigoEnviado);
        }
        
        public bool ExisteCorreo(string correo) {
            return base.Channel.ExisteCorreo(correo);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteCorreoAsync(string correo) {
            return base.Channel.ExisteCorreoAsync(correo);
        }
        
        public bool ExisteNombreUsuario(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuario(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteNombreUsuarioAsync(string nombreUsuario) {
            return base.Channel.ExisteNombreUsuarioAsync(nombreUsuario);
        }
        
        public bool VerificarContrasena(string contraseniaIngresada, string correo) {
            return base.Channel.VerificarContrasena(contraseniaIngresada, correo);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarContrasenaAsync(string contraseniaIngresada, string correo) {
            return base.Channel.VerificarContrasenaAsync(contraseniaIngresada, correo);
        }
        
        public bool ValidarUsuarioEnLinea(string nombreUsuario) {
            return base.Channel.ValidarUsuarioEnLinea(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarUsuarioEnLineaAsync(string nombreUsuario) {
            return base.Channel.ValidarUsuarioEnLineaAsync(nombreUsuario);
        }
        
        public int ObtenerIdJugadorPorNombreUsuario(string nombreUsuario) {
            return base.Channel.ObtenerIdJugadorPorNombreUsuario(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerIdJugadorPorNombreUsuarioAsync(string nombreUsuario) {
            return base.Channel.ObtenerIdJugadorPorNombreUsuarioAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.ISalaEsperaServicio", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.ISalaEsperaServicioCallback))]
    public interface ISalaEsperaServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/InvitarAmigoASala", ReplyAction="http://tempuri.org/ISalaEsperaServicio/InvitarAmigoASalaResponse")]
        void InvitarAmigoASala(string codigoSalaEspera, string nombreAmigo, string nombreInvitador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/InvitarAmigoASala", ReplyAction="http://tempuri.org/ISalaEsperaServicio/InvitarAmigoASalaResponse")]
        System.Threading.Tasks.Task InvitarAmigoASalaAsync(string codigoSalaEspera, string nombreAmigo, string nombreInvitador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/CrearSalaEspera")]
        void CrearSalaEspera(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/CrearSalaEspera")]
        System.Threading.Tasks.Task CrearSalaEsperaAsync(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/ObtenerCodigosGenerados", ReplyAction="http://tempuri.org/ISalaEsperaServicio/ObtenerCodigosGeneradosResponse")]
        string[] ObtenerCodigosGenerados();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/ObtenerCodigosGenerados", ReplyAction="http://tempuri.org/ISalaEsperaServicio/ObtenerCodigosGeneradosResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerCodigosGeneradosAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/UnirseSalaEspera")]
        void UnirseSalaEspera(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/UnirseSalaEspera")]
        System.Threading.Tasks.Task UnirseSalaEsperaAsync(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/UnirSalaEsperaComoAnfitrion")]
        void UnirSalaEsperaComoAnfitrion(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/UnirSalaEsperaComoAnfitrion")]
        System.Threading.Tasks.Task UnirSalaEsperaComoAnfitrionAsync(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/SalirSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/SalirSalaEsperaResponse")]
        void SalirSalaEspera(string codigoSalaEspera, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/SalirSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/SalirSalaEsperaResponse")]
        System.Threading.Tasks.Task SalirSalaEsperaAsync(string codigoSalaEspera, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/MandarMensaje", ReplyAction="http://tempuri.org/ISalaEsperaServicio/MandarMensajeResponse")]
        void MandarMensaje(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/MandarMensaje", ReplyAction="http://tempuri.org/ISalaEsperaServicio/MandarMensajeResponse")]
        System.Threading.Tasks.Task MandarMensajeAsync(string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/BuscarSalaEsperaDisponible", ReplyAction="http://tempuri.org/ISalaEsperaServicio/BuscarSalaEsperaDisponibleResponse")]
        string BuscarSalaEsperaDisponible();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/BuscarSalaEsperaDisponible", ReplyAction="http://tempuri.org/ISalaEsperaServicio/BuscarSalaEsperaDisponibleResponse")]
        System.Threading.Tasks.Task<string> BuscarSalaEsperaDisponibleAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/IniciarPartida")]
        void IniciarPartida(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaEsperaServicio/IniciarPartida")]
        System.Threading.Tasks.Task IniciarPartidaAsync(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/ExpulsarJugadorSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/ExpulsarJugadorSalaEsperaResponse")]
        void ExpulsarJugadorSalaEspera(string lobbyCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/ExpulsarJugadorSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/ExpulsarJugadorSalaEsperaResponse")]
        System.Threading.Tasks.Task ExpulsarJugadorSalaEsperaAsync(string lobbyCode, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaEsperaServicioCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarSalaEsperaCreada", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarSalaEsperaCreadaResponse")]
        void NotificarSalaEsperaCreada(string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarJugadoresEnSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarJugadoresEnSalaEsperaResponse")]
        void NotificarJugadoresEnSalaEspera(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera[] jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarJugadorSeUnioSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarJugadorSeUnioSalaEsperaResponse")]
        void NotificarJugadorSeUnioSalaEspera(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador, int numeroJugadoresSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarJugadorSalioSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarJugadorSalioSalaEsperaResponse")]
        void NotificarJugadorSalioSalaEspera(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarAnfritionJugadorSalioSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarAnfritionJugadorSalioSalaEsperaRe" +
            "sponse")]
        void NotificarAnfritionJugadorSalioSalaEspera();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarIniciarPartida", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarIniciarPartidaResponse")]
        void NotificarIniciarPartida(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadoresPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarSalaEsperaLlena", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarSalaEsperaLlenaResponse")]
        void NotificarSalaEsperaLlena();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarSalaEsperaNoExiste", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarSalaEsperaNoExisteResponse")]
        void NotificarSalaEsperaNoExiste();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarExpulsadoSalaEspera", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarExpulsadoSalaEsperaResponse")]
        void NotificarExpulsadoSalaEspera();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/RecibirMensaje", ReplyAction="http://tempuri.org/ISalaEsperaServicio/RecibirMensajeResponse")]
        void RecibirMensaje(string nombreUsuario, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaEsperaServicio/NotificarPuedeIniciarPartida", ReplyAction="http://tempuri.org/ISalaEsperaServicio/NotificarPuedeIniciarPartidaResponse")]
        void NotificarPuedeIniciarPartida(bool puedeIniciar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaEsperaServicioChannel : trofeoCazador.ServicioDelJuego.ISalaEsperaServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalaEsperaServicioClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.ISalaEsperaServicio>, trofeoCazador.ServicioDelJuego.ISalaEsperaServicio {
        
        public SalaEsperaServicioClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SalaEsperaServicioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SalaEsperaServicioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SalaEsperaServicioClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SalaEsperaServicioClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void InvitarAmigoASala(string codigoSalaEspera, string nombreAmigo, string nombreInvitador) {
            base.Channel.InvitarAmigoASala(codigoSalaEspera, nombreAmigo, nombreInvitador);
        }
        
        public System.Threading.Tasks.Task InvitarAmigoASalaAsync(string codigoSalaEspera, string nombreAmigo, string nombreInvitador) {
            return base.Channel.InvitarAmigoASalaAsync(codigoSalaEspera, nombreAmigo, nombreInvitador);
        }
        
        public void CrearSalaEspera(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            base.Channel.CrearSalaEspera(jugador);
        }
        
        public System.Threading.Tasks.Task CrearSalaEsperaAsync(trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            return base.Channel.CrearSalaEsperaAsync(jugador);
        }
        
        public string[] ObtenerCodigosGenerados() {
            return base.Channel.ObtenerCodigosGenerados();
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerCodigosGeneradosAsync() {
            return base.Channel.ObtenerCodigosGeneradosAsync();
        }
        
        public void UnirseSalaEspera(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            base.Channel.UnirseSalaEspera(codigoSalaEspera, jugador);
        }
        
        public System.Threading.Tasks.Task UnirseSalaEsperaAsync(string codigoSalaEspera, trofeoCazador.ServicioDelJuego.JugadorSalaEspera jugador) {
            return base.Channel.UnirseSalaEsperaAsync(codigoSalaEspera, jugador);
        }
        
        public void UnirSalaEsperaComoAnfitrion(string codigoSalaEspera) {
            base.Channel.UnirSalaEsperaComoAnfitrion(codigoSalaEspera);
        }
        
        public System.Threading.Tasks.Task UnirSalaEsperaComoAnfitrionAsync(string codigoSalaEspera) {
            return base.Channel.UnirSalaEsperaComoAnfitrionAsync(codigoSalaEspera);
        }
        
        public void SalirSalaEspera(string codigoSalaEspera, string nombreUsuario) {
            base.Channel.SalirSalaEspera(codigoSalaEspera, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task SalirSalaEsperaAsync(string codigoSalaEspera, string nombreUsuario) {
            return base.Channel.SalirSalaEsperaAsync(codigoSalaEspera, nombreUsuario);
        }
        
        public void MandarMensaje(string mensaje) {
            base.Channel.MandarMensaje(mensaje);
        }
        
        public System.Threading.Tasks.Task MandarMensajeAsync(string mensaje) {
            return base.Channel.MandarMensajeAsync(mensaje);
        }
        
        public string BuscarSalaEsperaDisponible() {
            return base.Channel.BuscarSalaEsperaDisponible();
        }
        
        public System.Threading.Tasks.Task<string> BuscarSalaEsperaDisponibleAsync() {
            return base.Channel.BuscarSalaEsperaDisponibleAsync();
        }
        
        public void IniciarPartida(string codigoSalaEspera) {
            base.Channel.IniciarPartida(codigoSalaEspera);
        }
        
        public System.Threading.Tasks.Task IniciarPartidaAsync(string codigoSalaEspera) {
            return base.Channel.IniciarPartidaAsync(codigoSalaEspera);
        }
        
        public void ExpulsarJugadorSalaEspera(string lobbyCode, string username) {
            base.Channel.ExpulsarJugadorSalaEspera(lobbyCode, username);
        }
        
        public System.Threading.Tasks.Task ExpulsarJugadorSalaEsperaAsync(string lobbyCode, string username) {
            return base.Channel.ExpulsarJugadorSalaEsperaAsync(lobbyCode, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorAmistad")]
    public interface IGestorAmistad {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigos", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigosHuntersTrophyE" +
            "xcepcionFault", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        string[] ObtenerListaNombresUsuariosAmigos(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigos", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerListaNombresUsuariosAmigosResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerListaNombresUsuariosAmigosAsync(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistadHuntersTrophyExcepc" +
            "ionFault", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        bool ValidarEnvioSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/ValidarEnvioSolicitudAmistadResponse")]
        System.Threading.Tasks.Task<bool> ValidarEnvioSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistadHuntersTrophyExcepcionFa" +
            "ult", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        int AgregarSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorAmistad/AgregarSolicitudAmistadResponse")]
        System.Threading.Tasks.Task<int> AgregarSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantes", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantesHuntersTrophy" +
            "ExcepcionFault", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        string[] ObtenerNombresUsuariosSolicitantes(int idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantes", ReplyAction="http://tempuri.org/IGestorAmistad/ObtenerNombresUsuariosSolicitantesResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerNombresUsuariosSolicitantesAsync(int idPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorAmistadChannel : trofeoCazador.ServicioDelJuego.IGestorAmistad, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorAmistadClient : System.ServiceModel.ClientBase<trofeoCazador.ServicioDelJuego.IGestorAmistad>, trofeoCazador.ServicioDelJuego.IGestorAmistad {
        
        public GestorAmistadClient() {
        }
        
        public GestorAmistadClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestorAmistadClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorAmistadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorAmistadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] ObtenerListaNombresUsuariosAmigos(int idPlayer) {
            return base.Channel.ObtenerListaNombresUsuariosAmigos(idPlayer);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerListaNombresUsuariosAmigosAsync(int idPlayer) {
            return base.Channel.ObtenerListaNombresUsuariosAmigosAsync(idPlayer);
        }
        
        public bool ValidarEnvioSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.ValidarEnvioSolicitudAmistad(idPlayerSender, usernamePlayerRequested);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarEnvioSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.ValidarEnvioSolicitudAmistadAsync(idPlayerSender, usernamePlayerRequested);
        }
        
        public int AgregarSolicitudAmistad(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.AgregarSolicitudAmistad(idPlayerSender, usernamePlayerRequested);
        }
        
        public System.Threading.Tasks.Task<int> AgregarSolicitudAmistadAsync(int idPlayerSender, string usernamePlayerRequested) {
            return base.Channel.AgregarSolicitudAmistadAsync(idPlayerSender, usernamePlayerRequested);
        }
        
        public string[] ObtenerNombresUsuariosSolicitantes(int idPlayer) {
            return base.Channel.ObtenerNombresUsuariosSolicitantes(idPlayer);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerNombresUsuariosSolicitantesAsync(int idPlayer) {
            return base.Channel.ObtenerNombresUsuariosSolicitantesAsync(idPlayer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorDeSolicitudesDeAmistad", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistadCallback))]
    public interface IGestorDeSolicitudesDeAmistad {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AgregarADiccionarioAmistadesEnLi" +
            "nea")]
        void AgregarADiccionarioAmistadesEnLinea(string nombreUsuarioDeActualJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AgregarADiccionarioAmistadesEnLi" +
            "nea")]
        System.Threading.Tasks.Task AgregarADiccionarioAmistadesEnLineaAsync(string nombreUsuarioDeActualJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EnviarSolicitudAmistad")]
        void EnviarSolicitudAmistad(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EnviarSolicitudAmistad")]
        System.Threading.Tasks.Task EnviarSolicitudAmistadAsync(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AceptarSolicitudAmistad")]
        void AceptarSolicitudAmistad(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/AceptarSolicitudAmistad")]
        System.Threading.Tasks.Task AceptarSolicitudAmistadAsync(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/RechazarSolicitudAmistad")]
        void RechazarSolicitudAmistad(int idJugadorActual, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/RechazarSolicitudAmistad")]
        System.Threading.Tasks.Task RechazarSolicitudAmistadAsync(int idJugadorActual, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarAmigo")]
        void EliminarAmigo(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarAmigo")]
        System.Threading.Tasks.Task EliminarAmigoAsync(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarDeDiccionarioAmistadesEn" +
            "Linea")]
        void EliminarDeDiccionarioAmistadesEnLinea(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/EliminarDeDiccionarioAmistadesEn" +
            "Linea")]
        System.Threading.Tasks.Task EliminarDeDiccionarioAmistadesEnLineaAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorDeSolicitudesDeAmistadCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarNuevaSolicitudAmistad", ReplyAction="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarNuevaSolicitudAmistadRe" +
            "sponse")]
        void NotificarNuevaSolicitudAmistad(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarSolicitudAmistadAceptad" +
            "a", ReplyAction="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarSolicitudAmistadAceptad" +
            "aResponse")]
        void NotificarSolicitudAmistadAceptada(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarAmigoEliminado", ReplyAction="http://tempuri.org/IGestorDeSolicitudesDeAmistad/NotificarAmigoEliminadoResponse")]
        void NotificarAmigoEliminado(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorDeSolicitudesDeAmistadChannel : trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistad, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorDeSolicitudesDeAmistadClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistad>, trofeoCazador.ServicioDelJuego.IGestorDeSolicitudesDeAmistad {
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorDeSolicitudesDeAmistadClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AgregarADiccionarioAmistadesEnLinea(string nombreUsuarioDeActualJugador) {
            base.Channel.AgregarADiccionarioAmistadesEnLinea(nombreUsuarioDeActualJugador);
        }
        
        public System.Threading.Tasks.Task AgregarADiccionarioAmistadesEnLineaAsync(string nombreUsuarioDeActualJugador) {
            return base.Channel.AgregarADiccionarioAmistadesEnLineaAsync(nombreUsuarioDeActualJugador);
        }
        
        public void EnviarSolicitudAmistad(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado) {
            base.Channel.EnviarSolicitudAmistad(nombreUsuarioJugadorRemitente, nombreUsuarioJugadorSolicitado);
        }
        
        public System.Threading.Tasks.Task EnviarSolicitudAmistadAsync(string nombreUsuarioJugadorRemitente, string nombreUsuarioJugadorSolicitado) {
            return base.Channel.EnviarSolicitudAmistadAsync(nombreUsuarioJugadorRemitente, nombreUsuarioJugadorSolicitado);
        }
        
        public void AceptarSolicitudAmistad(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente) {
            base.Channel.AceptarSolicitudAmistad(idJugadorSolicitado, nombreUsuarioJugadorSolicitado, nombreUsuarioJugadorRemitente);
        }
        
        public System.Threading.Tasks.Task AceptarSolicitudAmistadAsync(int idJugadorSolicitado, string nombreUsuarioJugadorSolicitado, string nombreUsuarioJugadorRemitente) {
            return base.Channel.AceptarSolicitudAmistadAsync(idJugadorSolicitado, nombreUsuarioJugadorSolicitado, nombreUsuarioJugadorRemitente);
        }
        
        public void RechazarSolicitudAmistad(int idJugadorActual, string nombreUsuario) {
            base.Channel.RechazarSolicitudAmistad(idJugadorActual, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task RechazarSolicitudAmistadAsync(int idJugadorActual, string nombreUsuario) {
            return base.Channel.RechazarSolicitudAmistadAsync(idJugadorActual, nombreUsuario);
        }
        
        public void EliminarAmigo(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado) {
            base.Channel.EliminarAmigo(idJugadorActual, nombreUsuarioDeActualJugador, nombreUsuarioAmigoEliminado);
        }
        
        public System.Threading.Tasks.Task EliminarAmigoAsync(int idJugadorActual, string nombreUsuarioDeActualJugador, string nombreUsuarioAmigoEliminado) {
            return base.Channel.EliminarAmigoAsync(idJugadorActual, nombreUsuarioDeActualJugador, nombreUsuarioAmigoEliminado);
        }
        
        public void EliminarDeDiccionarioAmistadesEnLinea(string nombreUsuario) {
            base.Channel.EliminarDeDiccionarioAmistadesEnLinea(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task EliminarDeDiccionarioAmistadesEnLineaAsync(string nombreUsuario) {
            return base.Channel.EliminarDeDiccionarioAmistadesEnLineaAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorUsuariosConectados", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.IGestorUsuariosConectadosCallback))]
    public interface IGestorUsuariosConectados {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/RegistrarUsuarioAUsuariosConectados")]
        void RegistrarUsuarioAUsuariosConectados(int idJugador, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/RegistrarUsuarioAUsuariosConectados")]
        System.Threading.Tasks.Task RegistrarUsuarioAUsuariosConectadosAsync(int idJugador, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/DesregistrarUsuarioDeUsuariosEnLinea" +
            "")]
        void DesregistrarUsuarioDeUsuariosEnLinea(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/DesregistrarUsuarioDeUsuariosEnLinea" +
            "")]
        System.Threading.Tasks.Task DesregistrarUsuarioDeUsuariosEnLineaAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorUsuariosConectadosCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/NotificarInvitacionSala")]
        void NotificarInvitacionSala(string nombreInvitador, string codigoSalaEspera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioConectado", ReplyAction="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioConectadoResponse")]
        void NotificarUsuarioConectado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioDesconectado", ReplyAction="http://tempuri.org/IGestorUsuariosConectados/NotificarUsuarioDesconectadoResponse" +
            "")]
        void NotificarUsuarioDesconectado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorUsuariosConectados/NotificarAmigosEnLinea", ReplyAction="http://tempuri.org/IGestorUsuariosConectados/NotificarAmigosEnLineaResponse")]
        void NotificarAmigosEnLinea(string[] nombresUsuariosEnLinea);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGestorUsuariosConectados/Ping")]
        void Ping();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorUsuariosConectadosChannel : trofeoCazador.ServicioDelJuego.IGestorUsuariosConectados, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorUsuariosConectadosClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.IGestorUsuariosConectados>, trofeoCazador.ServicioDelJuego.IGestorUsuariosConectados {
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GestorUsuariosConectadosClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegistrarUsuarioAUsuariosConectados(int idJugador, string nombreUsuario) {
            base.Channel.RegistrarUsuarioAUsuariosConectados(idJugador, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task RegistrarUsuarioAUsuariosConectadosAsync(int idJugador, string nombreUsuario) {
            return base.Channel.RegistrarUsuarioAUsuariosConectadosAsync(idJugador, nombreUsuario);
        }
        
        public void DesregistrarUsuarioDeUsuariosEnLinea(string nombreUsuario) {
            base.Channel.DesregistrarUsuarioDeUsuariosEnLinea(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task DesregistrarUsuarioDeUsuariosEnLineaAsync(string nombreUsuario) {
            return base.Channel.DesregistrarUsuarioDeUsuariosEnLineaAsync(nombreUsuario);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IServicioPartida", CallbackContract=typeof(trofeoCazador.ServicioDelJuego.IServicioPartidaCallback))]
    public interface IServicioPartida {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EmpezarTurno")]
        void EmpezarTurno(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EmpezarTurno")]
        System.Threading.Tasks.Task EmpezarTurnoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/FinalizarTurno")]
        void FinalizarTurno(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/FinalizarTurno")]
        System.Threading.Tasks.Task FinalizarTurnoAsync(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/CrearPartida")]
        void CrearPartida(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/CrearPartida")]
        System.Threading.Tasks.Task CrearPartidaAsync(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RegistrarJugador")]
        void RegistrarJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RegistrarJugador")]
        System.Threading.Tasks.Task RegistrarJugadorAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/LanzarDado")]
        void LanzarDado(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/LanzarDado")]
        System.Threading.Tasks.Task LanzarDadoAsync(string idPartida, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RepartirCartas")]
        void RepartirCartas(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RepartirCartas")]
        System.Threading.Tasks.Task RepartirCartasAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/TomarCartaDeMazo")]
        void TomarCartaDeMazo(string idPartida, string nombreUsuario, int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/TomarCartaDeMazo")]
        System.Threading.Tasks.Task TomarCartaDeMazoAsync(string idPartida, string nombreUsuario, int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/AgregarCartaACartasEnMano")]
        void AgregarCartaACartasEnMano(string nombreUsuario, trofeoCazador.ServicioDelJuego.Carta carta, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/AgregarCartaACartasEnMano")]
        System.Threading.Tasks.Task AgregarCartaACartasEnManoAsync(string nombreUsuario, trofeoCazador.ServicioDelJuego.Carta carta, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/TomarFichaMesa")]
        void TomarFichaMesa(string idPartida, int idFicha);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/TomarFichaMesa")]
        System.Threading.Tasks.Task TomarFichaMesaAsync(string idPartida, int idFicha);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/UtilizarCarta")]
        void UtilizarCarta(string idPartida, int idCarta, string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/UtilizarCarta")]
        System.Threading.Tasks.Task UtilizarCartaAsync(string idPartida, int idCarta, string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/AgregarCartaADescarte")]
        void AgregarCartaADescarte(trofeoCazador.ServicioDelJuego.Carta carta, trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/AgregarCartaADescarte")]
        System.Threading.Tasks.Task AgregarCartaADescarteAsync(trofeoCazador.ServicioDelJuego.Carta carta, trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/DevolverFichaAMesa")]
        void DevolverFichaAMesa(int idFicha, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/DevolverFichaAMesa")]
        System.Threading.Tasks.Task DevolverFichaAMesaAsync(int idFicha, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/AgregarCartaAEscondite")]
        void AgregarCartaAEscondite(string nombreUsuario, int idCarta, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/AgregarCartaAEscondite")]
        System.Threading.Tasks.Task AgregarCartaAEsconditeAsync(string nombreUsuario, int idCarta, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NumeroCartasEnMano", ReplyAction="http://tempuri.org/IServicioPartida/NumeroCartasEnManoResponse")]
        int NumeroCartasEnMano(string nombreUsuario, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NumeroCartasEnMano", ReplyAction="http://tempuri.org/IServicioPartida/NumeroCartasEnManoResponse")]
        System.Threading.Tasks.Task<int> NumeroCartasEnManoAsync(string nombreUsuario, string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCartaAJugador")]
        void RobarCartaAJugador(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCartaAJugador")]
        System.Threading.Tasks.Task RobarCartaAJugadorAsync(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCarta")]
        void RobarCarta(string idPartida, string nombreDefensor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCarta")]
        System.Threading.Tasks.Task RobarCartaAsync(string idPartida, string nombreDefensor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/UtilizarCartaDefensiva")]
        void UtilizarCartaDefensiva(string idPartida, string nombreDefensor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/UtilizarCartaDefensiva")]
        System.Threading.Tasks.Task UtilizarCartaDefensivaAsync(string idPartida, string nombreDefensor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCartaEsconditeAJugador")]
        void RobarCartaEsconditeAJugador(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCartaEsconditeAJugador")]
        System.Threading.Tasks.Task RobarCartaEsconditeAJugadorAsync(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCartaEscondite")]
        void RobarCartaEscondite(string idPartida, string nombreDefensor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RobarCartaEscondite")]
        System.Threading.Tasks.Task RobarCartaEsconditeAsync(string idPartida, string nombreDefensor);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/TomarCartaDeDescarte")]
        void TomarCartaDeDescarte(string idPartida, string nombreJugador, int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/TomarCartaDeDescarte")]
        System.Threading.Tasks.Task TomarCartaDeDescarteAsync(string idPartida, string nombreJugador, int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/ObligarATirarDado")]
        void ObligarATirarDado(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/ObligarATirarDado")]
        System.Threading.Tasks.Task ObligarATirarDadoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/PreguntarGuardarCartaEnEscondite")]
        void PreguntarGuardarCartaEnEscondite(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/PreguntarGuardarCartaEnEscondite")]
        System.Threading.Tasks.Task PreguntarGuardarCartaEnEsconditeAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EnviarDecision")]
        void EnviarDecision(string idPartida, bool decision);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EnviarDecision")]
        System.Threading.Tasks.Task EnviarDecisionAsync(string idPartida, bool decision);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RevelarCartaMazo")]
        void RevelarCartaMazo(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/RevelarCartaMazo")]
        System.Threading.Tasks.Task RevelarCartaMazoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/OcultarCartaMazo")]
        void OcultarCartaMazo(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/OcultarCartaMazo")]
        System.Threading.Tasks.Task OcultarCartaMazoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/FinalizarJuego")]
        void FinalizarJuego(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/FinalizarJuego")]
        System.Threading.Tasks.Task FinalizarJuegoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/DejarTirarDado")]
        void DejarTirarDado(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/DejarTirarDado")]
        System.Threading.Tasks.Task DejarTirarDadoAsync(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EstablecerModoSeleccionCarta")]
        void EstablecerModoSeleccionCarta(string idPartida, int idModoSeleccion, string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicioPartida/EstablecerModoSeleccionCarta")]
        System.Threading.Tasks.Task EstablecerModoSeleccionCartaAsync(string idPartida, int idModoSeleccion, string nombreJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/RegistrarJugadorInvitado", ReplyAction="http://tempuri.org/IServicioPartida/RegistrarJugadorInvitadoResponse")]
        void RegistrarJugadorInvitado(trofeoCazador.ServicioDelJuego.JugadorPartida invitado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/RegistrarJugadorInvitado", ReplyAction="http://tempuri.org/IServicioPartida/RegistrarJugadorInvitadoResponse")]
        System.Threading.Tasks.Task RegistrarJugadorInvitadoAsync(trofeoCazador.ServicioDelJuego.JugadorPartida invitado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioPartidaCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarTurnoIniciado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarTurnoIniciadoResponse")]
        void NotificarTurnoIniciado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarTurnoTerminado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarTurnoTerminadoResponse")]
        void NotificarTurnoTerminado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarResultadoAccion", ReplyAction="http://tempuri.org/IServicioPartida/NotificarResultadoAccionResponse")]
        void NotificarResultadoAccion(string accion, bool sucedio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarPartidaCreada", ReplyAction="http://tempuri.org/IServicioPartida/NotificarPartidaCreadaResponse")]
        void NotificarPartidaCreada(string idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarResultadoDado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarResultadoDadoResponse")]
        void NotificarResultadoDado(string nombreUsuario, int resultado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartasEnMano", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartasEnManoResponse")]
        void NotificarCartasEnMano(trofeoCazador.ServicioDelJuego.Carta[] cartasRepartidas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartasEnMazo", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartasEnMazoResponse")]
        void NotificarCartasEnMazo(trofeoCazador.ServicioDelJuego.Carta[] cartasEnMazo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaTomadaMazo", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaTomadaMazoResponse")]
        void NotificarCartaTomadaMazo(int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaAgregadaAMano", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaAgregadaAManoResponse")]
        void NotificarCartaAgregadaAMano(trofeoCazador.ServicioDelJuego.Carta carta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarFichaTomadaMesa", ReplyAction="http://tempuri.org/IServicioPartida/NotificarFichaTomadaMesaResponse")]
        void NotificarFichaTomadaMesa(string nombreUsuario, int idFicha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaUtilizada", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaUtilizadaResponse")]
        void NotificarCartaUtilizada(int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaAgregadaADescarte", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaAgregadaADescarteResponse")]
        void NotificarCartaAgregadaADescarte(trofeoCazador.ServicioDelJuego.Carta carta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarFichaDevuelta", ReplyAction="http://tempuri.org/IServicioPartida/NotificarFichaDevueltaResponse")]
        void NotificarFichaDevuelta(int idFicha, string nombreJugadorTurnoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaAgregadaAEscondite", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaAgregadaAEsconditeResponse")]
        void NotificarCartaAgregadaAEscondite(int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarIntentoRoboCarta", ReplyAction="http://tempuri.org/IServicioPartida/NotificarIntentoRoboCartaResponse")]
        void NotificarIntentoRoboCarta(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaRobada", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaRobadaResponse")]
        void NotificarCartaRobada(trofeoCazador.ServicioDelJuego.Carta cartaRobada, string nombreJugadorObjetivoRobo, string nombreJugadorTurnoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarIntentoRoboCartaEscondite", ReplyAction="http://tempuri.org/IServicioPartida/NotificarIntentoRoboCartaEsconditeResponse")]
        void NotificarIntentoRoboCartaEscondite(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaEsconditeRobada", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaEsconditeRobadaResponse")]
        void NotificarCartaEsconditeRobada(trofeoCazador.ServicioDelJuego.Carta cartaRobada, string nombreJugadorObjetivoRobo, string nombreJugadorTurnoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarCartaTomadaDescarte", ReplyAction="http://tempuri.org/IServicioPartida/NotificarCartaTomadaDescarteResponse")]
        void NotificarCartaTomadaDescarte(int idCarta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarTiroDadoForzado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarTiroDadoForzadoResponse")]
        void NotificarTiroDadoForzado(string jugadorEnTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarPreguntaJugadores", ReplyAction="http://tempuri.org/IServicioPartida/NotificarPreguntaJugadoresResponse")]
        void NotificarPreguntaJugadores(string jugadorTurnoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarNumeroJugadoresGuardaronCarta", ReplyAction="http://tempuri.org/IServicioPartida/NotificarNumeroJugadoresGuardaronCartaRespons" +
            "e")]
        void NotificarNumeroJugadoresGuardaronCarta(int numeroJugadores);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarMazoRevelado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarMazoReveladoResponse")]
        void NotificarMazoRevelado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarMazoOculto", ReplyAction="http://tempuri.org/IServicioPartida/NotificarMazoOcultoResponse")]
        void NotificarMazoOculto(trofeoCazador.ServicioDelJuego.Carta cartaParteTrasera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarResultadosJuego", ReplyAction="http://tempuri.org/IServicioPartida/NotificarResultadosJuegoResponse")]
        void NotificarResultadosJuego(System.Collections.Generic.Dictionary<string, int> puntajes, string ganador, int puntajeGanador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarPararTirarDado", ReplyAction="http://tempuri.org/IServicioPartida/NotificarPararTirarDadoResponse")]
        void NotificarPararTirarDado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioPartida/NotificarModoSeleccionCarta", ReplyAction="http://tempuri.org/IServicioPartida/NotificarModoSeleccionCartaResponse")]
        void NotificarModoSeleccionCarta(int idModoSeleccion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioPartidaChannel : trofeoCazador.ServicioDelJuego.IServicioPartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioPartidaClient : System.ServiceModel.DuplexClientBase<trofeoCazador.ServicioDelJuego.IServicioPartida>, trofeoCazador.ServicioDelJuego.IServicioPartida {
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioPartidaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void EmpezarTurno(string idPartida) {
            base.Channel.EmpezarTurno(idPartida);
        }
        
        public System.Threading.Tasks.Task EmpezarTurnoAsync(string idPartida) {
            return base.Channel.EmpezarTurnoAsync(idPartida);
        }
        
        public void FinalizarTurno(string idPartida, string nombreUsuario) {
            base.Channel.FinalizarTurno(idPartida, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task FinalizarTurnoAsync(string idPartida, string nombreUsuario) {
            return base.Channel.FinalizarTurnoAsync(idPartida, nombreUsuario);
        }
        
        public void CrearPartida(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida) {
            base.Channel.CrearPartida(jugadores, idPartida);
        }
        
        public System.Threading.Tasks.Task CrearPartidaAsync(trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores, string idPartida) {
            return base.Channel.CrearPartidaAsync(jugadores, idPartida);
        }
        
        public void RegistrarJugador(string nombreUsuario) {
            base.Channel.RegistrarJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task RegistrarJugadorAsync(string nombreUsuario) {
            return base.Channel.RegistrarJugadorAsync(nombreUsuario);
        }
        
        public void LanzarDado(string idPartida, string nombreUsuario) {
            base.Channel.LanzarDado(idPartida, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task LanzarDadoAsync(string idPartida, string nombreUsuario) {
            return base.Channel.LanzarDadoAsync(idPartida, nombreUsuario);
        }
        
        public void RepartirCartas(string idPartida) {
            base.Channel.RepartirCartas(idPartida);
        }
        
        public System.Threading.Tasks.Task RepartirCartasAsync(string idPartida) {
            return base.Channel.RepartirCartasAsync(idPartida);
        }
        
        public void TomarCartaDeMazo(string idPartida, string nombreUsuario, int idCarta) {
            base.Channel.TomarCartaDeMazo(idPartida, nombreUsuario, idCarta);
        }
        
        public System.Threading.Tasks.Task TomarCartaDeMazoAsync(string idPartida, string nombreUsuario, int idCarta) {
            return base.Channel.TomarCartaDeMazoAsync(idPartida, nombreUsuario, idCarta);
        }
        
        public void AgregarCartaACartasEnMano(string nombreUsuario, trofeoCazador.ServicioDelJuego.Carta carta, string idPartida) {
            base.Channel.AgregarCartaACartasEnMano(nombreUsuario, carta, idPartida);
        }
        
        public System.Threading.Tasks.Task AgregarCartaACartasEnManoAsync(string nombreUsuario, trofeoCazador.ServicioDelJuego.Carta carta, string idPartida) {
            return base.Channel.AgregarCartaACartasEnManoAsync(nombreUsuario, carta, idPartida);
        }
        
        public void TomarFichaMesa(string idPartida, int idFicha) {
            base.Channel.TomarFichaMesa(idPartida, idFicha);
        }
        
        public System.Threading.Tasks.Task TomarFichaMesaAsync(string idPartida, int idFicha) {
            return base.Channel.TomarFichaMesaAsync(idPartida, idFicha);
        }
        
        public void UtilizarCarta(string idPartida, int idCarta, string nombreJugador) {
            base.Channel.UtilizarCarta(idPartida, idCarta, nombreJugador);
        }
        
        public System.Threading.Tasks.Task UtilizarCartaAsync(string idPartida, int idCarta, string nombreJugador) {
            return base.Channel.UtilizarCartaAsync(idPartida, idCarta, nombreJugador);
        }
        
        public void AgregarCartaADescarte(trofeoCazador.ServicioDelJuego.Carta carta, trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores) {
            base.Channel.AgregarCartaADescarte(carta, jugadores);
        }
        
        public System.Threading.Tasks.Task AgregarCartaADescarteAsync(trofeoCazador.ServicioDelJuego.Carta carta, trofeoCazador.ServicioDelJuego.JugadorPartida[] jugadores) {
            return base.Channel.AgregarCartaADescarteAsync(carta, jugadores);
        }
        
        public void DevolverFichaAMesa(int idFicha, string idPartida) {
            base.Channel.DevolverFichaAMesa(idFicha, idPartida);
        }
        
        public System.Threading.Tasks.Task DevolverFichaAMesaAsync(int idFicha, string idPartida) {
            return base.Channel.DevolverFichaAMesaAsync(idFicha, idPartida);
        }
        
        public void AgregarCartaAEscondite(string nombreUsuario, int idCarta, string idPartida) {
            base.Channel.AgregarCartaAEscondite(nombreUsuario, idCarta, idPartida);
        }
        
        public System.Threading.Tasks.Task AgregarCartaAEsconditeAsync(string nombreUsuario, int idCarta, string idPartida) {
            return base.Channel.AgregarCartaAEsconditeAsync(nombreUsuario, idCarta, idPartida);
        }
        
        public int NumeroCartasEnMano(string nombreUsuario, string idPartida) {
            return base.Channel.NumeroCartasEnMano(nombreUsuario, idPartida);
        }
        
        public System.Threading.Tasks.Task<int> NumeroCartasEnManoAsync(string nombreUsuario, string idPartida) {
            return base.Channel.NumeroCartasEnManoAsync(nombreUsuario, idPartida);
        }
        
        public void RobarCartaAJugador(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva) {
            base.Channel.RobarCartaAJugador(nombreDefensor, idPartida, cartaDuplicacionActiva);
        }
        
        public System.Threading.Tasks.Task RobarCartaAJugadorAsync(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva) {
            return base.Channel.RobarCartaAJugadorAsync(nombreDefensor, idPartida, cartaDuplicacionActiva);
        }
        
        public void RobarCarta(string idPartida, string nombreDefensor) {
            base.Channel.RobarCarta(idPartida, nombreDefensor);
        }
        
        public System.Threading.Tasks.Task RobarCartaAsync(string idPartida, string nombreDefensor) {
            return base.Channel.RobarCartaAsync(idPartida, nombreDefensor);
        }
        
        public void UtilizarCartaDefensiva(string idPartida, string nombreDefensor) {
            base.Channel.UtilizarCartaDefensiva(idPartida, nombreDefensor);
        }
        
        public System.Threading.Tasks.Task UtilizarCartaDefensivaAsync(string idPartida, string nombreDefensor) {
            return base.Channel.UtilizarCartaDefensivaAsync(idPartida, nombreDefensor);
        }
        
        public void RobarCartaEsconditeAJugador(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva) {
            base.Channel.RobarCartaEsconditeAJugador(nombreDefensor, idPartida, cartaDuplicacionActiva);
        }
        
        public System.Threading.Tasks.Task RobarCartaEsconditeAJugadorAsync(string nombreDefensor, string idPartida, bool cartaDuplicacionActiva) {
            return base.Channel.RobarCartaEsconditeAJugadorAsync(nombreDefensor, idPartida, cartaDuplicacionActiva);
        }
        
        public void RobarCartaEscondite(string idPartida, string nombreDefensor) {
            base.Channel.RobarCartaEscondite(idPartida, nombreDefensor);
        }
        
        public System.Threading.Tasks.Task RobarCartaEsconditeAsync(string idPartida, string nombreDefensor) {
            return base.Channel.RobarCartaEsconditeAsync(idPartida, nombreDefensor);
        }
        
        public void TomarCartaDeDescarte(string idPartida, string nombreJugador, int idCarta) {
            base.Channel.TomarCartaDeDescarte(idPartida, nombreJugador, idCarta);
        }
        
        public System.Threading.Tasks.Task TomarCartaDeDescarteAsync(string idPartida, string nombreJugador, int idCarta) {
            return base.Channel.TomarCartaDeDescarteAsync(idPartida, nombreJugador, idCarta);
        }
        
        public void ObligarATirarDado(string idPartida) {
            base.Channel.ObligarATirarDado(idPartida);
        }
        
        public System.Threading.Tasks.Task ObligarATirarDadoAsync(string idPartida) {
            return base.Channel.ObligarATirarDadoAsync(idPartida);
        }
        
        public void PreguntarGuardarCartaEnEscondite(string idPartida) {
            base.Channel.PreguntarGuardarCartaEnEscondite(idPartida);
        }
        
        public System.Threading.Tasks.Task PreguntarGuardarCartaEnEsconditeAsync(string idPartida) {
            return base.Channel.PreguntarGuardarCartaEnEsconditeAsync(idPartida);
        }
        
        public void EnviarDecision(string idPartida, bool decision) {
            base.Channel.EnviarDecision(idPartida, decision);
        }
        
        public System.Threading.Tasks.Task EnviarDecisionAsync(string idPartida, bool decision) {
            return base.Channel.EnviarDecisionAsync(idPartida, decision);
        }
        
        public void RevelarCartaMazo(string idPartida) {
            base.Channel.RevelarCartaMazo(idPartida);
        }
        
        public System.Threading.Tasks.Task RevelarCartaMazoAsync(string idPartida) {
            return base.Channel.RevelarCartaMazoAsync(idPartida);
        }
        
        public void OcultarCartaMazo(string idPartida) {
            base.Channel.OcultarCartaMazo(idPartida);
        }
        
        public System.Threading.Tasks.Task OcultarCartaMazoAsync(string idPartida) {
            return base.Channel.OcultarCartaMazoAsync(idPartida);
        }
        
        public void FinalizarJuego(string idPartida) {
            base.Channel.FinalizarJuego(idPartida);
        }
        
        public System.Threading.Tasks.Task FinalizarJuegoAsync(string idPartida) {
            return base.Channel.FinalizarJuegoAsync(idPartida);
        }
        
        public void DejarTirarDado(string idPartida) {
            base.Channel.DejarTirarDado(idPartida);
        }
        
        public System.Threading.Tasks.Task DejarTirarDadoAsync(string idPartida) {
            return base.Channel.DejarTirarDadoAsync(idPartida);
        }
        
        public void EstablecerModoSeleccionCarta(string idPartida, int idModoSeleccion, string nombreJugador) {
            base.Channel.EstablecerModoSeleccionCarta(idPartida, idModoSeleccion, nombreJugador);
        }
        
        public System.Threading.Tasks.Task EstablecerModoSeleccionCartaAsync(string idPartida, int idModoSeleccion, string nombreJugador) {
            return base.Channel.EstablecerModoSeleccionCartaAsync(idPartida, idModoSeleccion, nombreJugador);
        }
        
        public void RegistrarJugadorInvitado(trofeoCazador.ServicioDelJuego.JugadorPartida invitado) {
            base.Channel.RegistrarJugadorInvitado(invitado);
        }
        
        public System.Threading.Tasks.Task RegistrarJugadorInvitadoAsync(trofeoCazador.ServicioDelJuego.JugadorPartida invitado) {
            return base.Channel.RegistrarJugadorInvitadoAsync(invitado);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IGestorInvitacion")]
    public interface IGestorInvitacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorInvitacion/EnviarInvitacionCorreo", ReplyAction="http://tempuri.org/IGestorInvitacion/EnviarInvitacionCorreoResponse")]
        bool EnviarInvitacionCorreo(string codigoSalaEspera, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestorInvitacion/EnviarInvitacionCorreo", ReplyAction="http://tempuri.org/IGestorInvitacion/EnviarInvitacionCorreoResponse")]
        System.Threading.Tasks.Task<bool> EnviarInvitacionCorreoAsync(string codigoSalaEspera, string correo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestorInvitacionChannel : trofeoCazador.ServicioDelJuego.IGestorInvitacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestorInvitacionClient : System.ServiceModel.ClientBase<trofeoCazador.ServicioDelJuego.IGestorInvitacion>, trofeoCazador.ServicioDelJuego.IGestorInvitacion {
        
        public GestorInvitacionClient() {
        }
        
        public GestorInvitacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestorInvitacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorInvitacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestorInvitacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool EnviarInvitacionCorreo(string codigoSalaEspera, string correo) {
            return base.Channel.EnviarInvitacionCorreo(codigoSalaEspera, correo);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarInvitacionCorreoAsync(string codigoSalaEspera, string correo) {
            return base.Channel.EnviarInvitacionCorreoAsync(codigoSalaEspera, correo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDelJuego.IEstadisticasGlobales")]
    public interface IEstadisticasGlobales {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEstadisticasGlobales/ObtenerEstadisticasGlobales", ReplyAction="http://tempuri.org/IEstadisticasGlobales/ObtenerEstadisticasGlobalesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IEstadisticasGlobales/ObtenerEstadisticasGlobalesHuntersTrophy" +
            "ExcepcionFault", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        trofeoCazador.ServicioDelJuego.Estadisticas[] ObtenerEstadisticasGlobales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEstadisticasGlobales/ObtenerEstadisticasGlobales", ReplyAction="http://tempuri.org/IEstadisticasGlobales/ObtenerEstadisticasGlobalesResponse")]
        System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.Estadisticas[]> ObtenerEstadisticasGlobalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEstadisticasGlobales/ActualizarVictorias", ReplyAction="http://tempuri.org/IEstadisticasGlobales/ActualizarVictoriasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(trofeoCazador.ServicioDelJuego.HuntersTrophyExcepcion), Action="http://tempuri.org/IEstadisticasGlobales/ActualizarVictoriasHuntersTrophyExcepcio" +
            "nFault", Name="HuntersTrophyExcepcion", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuego.Excepciones")]
        int ActualizarVictorias(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEstadisticasGlobales/ActualizarVictorias", ReplyAction="http://tempuri.org/IEstadisticasGlobales/ActualizarVictoriasResponse")]
        System.Threading.Tasks.Task<int> ActualizarVictoriasAsync(int idJugador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEstadisticasGlobalesChannel : trofeoCazador.ServicioDelJuego.IEstadisticasGlobales, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EstadisticasGlobalesClient : System.ServiceModel.ClientBase<trofeoCazador.ServicioDelJuego.IEstadisticasGlobales>, trofeoCazador.ServicioDelJuego.IEstadisticasGlobales {
        
        public EstadisticasGlobalesClient() {
        }
        
        public EstadisticasGlobalesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EstadisticasGlobalesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EstadisticasGlobalesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EstadisticasGlobalesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public trofeoCazador.ServicioDelJuego.Estadisticas[] ObtenerEstadisticasGlobales() {
            return base.Channel.ObtenerEstadisticasGlobales();
        }
        
        public System.Threading.Tasks.Task<trofeoCazador.ServicioDelJuego.Estadisticas[]> ObtenerEstadisticasGlobalesAsync() {
            return base.Channel.ObtenerEstadisticasGlobalesAsync();
        }
        
        public int ActualizarVictorias(int idJugador) {
            return base.Channel.ActualizarVictorias(idJugador);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarVictoriasAsync(int idJugador) {
            return base.Channel.ActualizarVictoriasAsync(idJugador);
        }
    }
}
